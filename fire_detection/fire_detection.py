# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EJ0AKNpFaQ9rlBHlVZWvaRBBSg8Z-xCh
"""

!pip uninstall -y ultralytics
!pip install ultralytics

# 1. Install Ultralytics (run once)
!pip install -q ultralytics

# 2. Import libraries
from ultralytics import YOLO
import cv2
from google.colab.patches import cv2_imshow
import torch

# 3. Load the YOLOv8 model
model = YOLO('best.pt')  # Make sure 'best.pt' is uploaded to your Colab environment

# 4. Open video file
video_path = '/content/1535674-hd_1920_1080_24fps.mp4'
cap = cv2.VideoCapture(video_path)

# 5. Process video frame by frame
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    results = model.predict(source=frame, save=False, verbose=False)
    result = results[0]
    boxes = result.boxes

    if boxes is not None and boxes.conf.numel() > 0:
        # Filter boxes with confidence > 0.5
        mask = boxes.conf > 0.7

        # If any boxes pass the threshold
        if mask.any():
            # Filter box data
            filtered_data = torch.cat((
                boxes.xyxy[mask],
                boxes.conf[mask].unsqueeze(1),
                boxes.cls[mask].unsqueeze(1),
            ), dim=1)

            from ultralytics.engine.results import Boxes
            filtered_boxes = Boxes(filtered_data, boxes.orig_shape)
            result.boxes = filtered_boxes
        else:
            # No detections pass the threshold, clear boxes to avoid drawing
            from ultralytics.engine.results import Boxes
            result.boxes = Boxes(torch.empty((0, 6)), boxes.orig_shape)

    # Draw and show the frame (will draw only filtered boxes)
    annotated_frame = result.plot()
    cv2_imshow(annotated_frame)
    cv2.waitKey(1)

cap.release()
cv2.destroyAllWindows()